openapi: 3.0.0
info:
  title: aye-and-nay API
  version: 1.0.0
servers:
  - url: http://localhost:8001
    description: dev
  - url: http://localhost:8001
    description: embed
  - url: https://localhost
    description: prod
paths:
  /api/albums/:
    post:
      description: >
        First request in a sequence. Server receives images and responds
        with an ID for the new album. A duration string is a sequence of
        decimal numbers, each with optional fraction and a unit suffix,
        such as "20m", "1.5h" or "2h45m". Valid time units are "m", "h".
      requestBody:
        $ref: '#/components/requestBodies/AlbumRequest'
      responses:
        '201':
          $ref: '#/components/responses/AlbumResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /api/albums/{album}/ready/:
    get:
      description: >
        Second request in a sequence (optional). It informs about
        compression process of an album. Once it shows 1, compression is
        complete. This request is not mandatory and the application can
        fully function even if compression is not finished.
      parameters:
        - $ref: '#/components/parameters/albumParam'
      responses:
        '200':
          $ref: '#/components/responses/ReadyResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /api/albums/{album}/pair/:
    get:
      description: >
        Third request in a sequence. Response consists of 2 image
        objects, each contains source and one-time token.
      parameters:
        - $ref: '#/components/parameters/albumParam'
      responses:
        '200':
          $ref: '#/components/responses/PairResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /api/images/{token}/:
    get:
      description: >
        If the backend is configured to hide an image ID, it will return
        a temporary link to a file which can be requested under this
        endpoint.
      parameters:
        - $ref: '#/components/parameters/tokenParam'
      responses:
        '200':
          $ref: '#/components/responses/PairResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /api/albums/{album}/vote/:
    patch:
      description: >
        Fourth request in a sequence. Request specifies a value transfer
        link from one image to another. Token of the selected image
        corresponds to `imgTo`. Respectively, token of the non-chosen
        image belongs to `imgFrom`.
      parameters:
        - $ref: '#/components/parameters/albumParam'
      requestBody:
        $ref: '#/components/requestBodies/VoteRequest'
      responses:
        '200':
          $ref: '#/components/responses/VoteResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /api/albums/{album}/top/:
    get:
      description: >
        Fifth request in a sequence. Returns a list of all images in an
        album. All the images are sorted according to rating in a
        descending order.
      parameters:
        - $ref: '#/components/parameters/albumParam'
      responses:
        '200':
          $ref: '#/components/responses/TopResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /api/health/:
    get:
      description: >
        Returns the health of the service and its dependencies.
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
components:
  schemas:
    Id:
      type: string
      pattern: '^[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\-\_]*$'
    AlbumRequest:
      type: object
      properties:
        images:
          type: array
          items:
            type: string
            format: binary
        duration:
          type: string
    AlbumResponse:
      type: object
      properties:
        album:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/Id'
    ReadyResponse:
      type: object
      properties:
        album:
          type: object
          properties:
            progress:
              type: number
              format: double
    PairResponse:
      type: object
      properties:
        album:
          type: object
          properties:
            img1:
              type: object
              properties:
                token:
                  $ref: '#/components/schemas/Id'
                src:
                  type: string
                  format: uri
            img2:
              type: object
              properties:
                token:
                  $ref: '#/components/schemas/Id'
                src:
                  type: string
                  format: uri
    VoteRequest:
      type: object
      properties:
        album:
          type: object
          properties:
            imgFrom:
              type: object
              properties:
                token:
                  $ref: '#/components/schemas/Id'
            imgTo:
              type: object
              properties:
                token:
                  $ref: '#/components/schemas/Id'
    TopResponse:
      type: object
      properties:
        album:
          type: object
          properties:
            images:
              type: array
              items:
                type: object
                properties:
                  src:
                    type: string
                    format: uri
                  rating:
                    type: number
                    format: double
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            msg:
              type: string
  parameters:
    albumParam:
      in: path
      name: album
      required: true
      schema:
        $ref: '#/components/schemas/Id'
    tokenParam:
      in: path
      name: token
      required: true
      schema:
        $ref: '#/components/schemas/Id'
  requestBodies:
    AlbumRequest:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/AlbumRequest'
    VoteRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VoteRequest'
  responses:
    AlbumResponse:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlbumResponse'
    ReadyResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReadyResponse'
    PairResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PairResponse'
    VoteResponse:
      description: OK
    TopResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopResponse'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServiceUnavailable:
      description: Service Unavailable
      content:
        text/plain:
          schema:
            type: string
            example: '<html><head><title>Timeout</title></head><body><h1>Timeout</h1></body></html>'
